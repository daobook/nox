# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Alethea Katherine Flowers
# This file is distributed under the same license as the Nox package.
# xinetzone <735613050@qq.com>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nox 2022.1.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-27 11:17+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: xinetzone <735613050@qq.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../tutorial.rst:2
msgid "Tutorial"
msgstr "教程"

#: ../../tutorial.rst:4
msgid ""
"This tutorial will walk you through installing, configuring, and running "
"Nox."
msgstr ""
"本教程将指导你完成安装、配置和运行 Nox。"

#: ../../tutorial.rst:8
msgid "Installation"
msgstr "安装"

#: ../../tutorial.rst:10
msgid "Nox can be easily installed via `pip`_:"
msgstr "Nox 可以通过 `pip`_ 轻松安装。"

#: ../../tutorial.rst:16
msgid ""
"You may want to use the `user site`_ to avoid messing with your global "
"Python install:"
msgstr ""
"你可能想使用 `user site`_，以避免搞乱你的全局 Python 安装："

#: ../../tutorial.rst:22
msgid "Or you can be extra fancy and use `pipx`_:"
msgstr "或者你可以更花哨一些，使用 `pipx`_："

#: ../../tutorial.rst:28
msgid ""
"Either way, Nox is usually installed *globally*, similar to ``tox``, "
"``pip``, and other similar tools."
msgstr ""
"无论如何，Nox 通常是 *全局* 范围内安装的，类似于 ``tox``、``pip`` 和其他类似工具。"

#: ../../tutorial.rst:30
msgid ""
"If you're interested in running ``nox`` within `docker`_, you can use the"
" `thekevjames/nox images`_ on DockerHub which contain builds for all "
"``nox`` versions and all supported ``python`` versions."
msgstr ""
"如果你对在 `docker`_ 中运行 ``nox`` 感兴趣，你可以使用 DockerHub 上的 `thekevjames/nox images`_，"
"其中包含所有 ``nox`` 版本和所有支持的 ``python`` 版本的构建。"

#: ../../tutorial.rst:32
msgid ""
"If you want to run ``nox`` within `GitHub Actions`_, you can use the "
"`excitedleigh/setup-nox action`_, which installs the latest ``nox`` and "
"makes available all Python versions provided by the GitHub Actions "
"environment."
msgstr ""
"如果你想在 `GitHub Actions`_ 中运行 ``nox``，你可以使用 `excitedleigh/setup-nox action`_，"
"它安装了最新的 ``nox``，并使 GitHub Actions 环境提供的所有 Python 版本可用。"

#: ../../tutorial.rst:43
msgid "Writing the configuration file"
msgstr "编写配置文件"

#: ../../tutorial.rst:45
msgid ""
"Nox is configured via a file called ``noxfile.py`` in your project's "
"directory. This file is a Python file that defines a set of *sessions*. A"
" *session* is an environment and a set of commands to run in that "
"environment. If you're familiar with tox sessions are analogous to "
"*environments*. If you're familiar with GNU Make, sessions are analogous "
"to *targets*."
msgstr ""
"Nox 是通过你的项目目录中一个叫做 ``noxfile.py`` 的文件配置的。"
"这个文件是一个 Python 文件，定义了一组 *sessions*。一个 *session* 是一个环境和一组在该环境中运行的命令。"
"如果你对 tox 熟悉的话，session 类似于 *environments*。如果你熟悉 GNU Make，session 就类似于 *targets*。"

#: ../../tutorial.rst:51
msgid ""
"Sessions are declared using the ``@nox.session`` decorator. This is "
"similar to how Flask uses ``@app.route``."
msgstr ""
"会话是使用 ``@nox.session`` 装饰器来声明的。这类似于 Flask 使用 ``@app.route`` 的方式。"

#: ../../tutorial.rst:54
msgid ""
"Here's a basic Noxfile that runs `flake8`_ against ``example.py`` (you "
"can create ``example.py`` yourself)::"
msgstr ""
"这是一个基本的 Noxfile，针对 ``example.py`` 运行 `flake8`_ （你可以自己创建 ``example.py``） ::"

#: ../../tutorial.rst:68
msgid "Running Nox for the first time"
msgstr "第一次运行 Nox"

#: ../../tutorial.rst:70
msgid ""
"Now that you've installed Nox and have a Noxfile you can run Nox! Open "
"your project's directory in a terminal and run ``nox``. You should see "
"something like this:"
msgstr ""
"现在你已经安装了 Nox 并有一个 Noxfile ，你可以运行 Nox 了！"
"在终端打开你的项目目录，运行 ``nox``。你应该看到像这样的东西："

#: ../../tutorial.rst:84
msgid "**✨ You've now successfully used Nox for the first time! ✨**"
msgstr "**✨ 你现在已经成功地第一次使用了 Nox！ ✨**"

#: ../../tutorial.rst:86
msgid ""
"The rest of this tutorial will take you through other common things "
"you'll likely want to do with Nox. You can also jump into :doc:`usage` "
"and :doc:`config` docs if you want."
msgstr ""
"本教程的其余部分将带你了解你可能想用 Nox 做的其他普通事情。"
"如果你愿意，你也可以跳到 :doc:`usage` 和 :doc:`config` 文档中。"

#: ../../tutorial.rst:92
msgid "Installing dependencies"
msgstr "安装依赖"

#: ../../tutorial.rst:94
msgid ""
"Nox more or less passes ``session.install`` through to ``pip``, so you "
"can install stuff in the usual way. Here's some examples:"
msgstr ""
"Nox 或多或少将 ``session.install`` 传递给 ``pip``，所以你可以用通常的方式安装东西。这里有一些例子："

#: ../../tutorial.rst:97
msgid "To install one or more packages at a time:"
msgstr "要一次安装一个或多个软件包："

#: ../../tutorial.rst:107
msgid "To install a ``requirements.txt`` file:"
msgstr "要安装 ``requirements.txt`` 文件："

#: ../../tutorial.rst:117
msgid "If your project is a Python package and you want to install it:"
msgstr "如果你的项目是 Python 包，你想安装它："

#: ../../tutorial.rst:127
msgid ""
"In some cases such as Python binary extensions, your package may depend "
"on code compiled outside of the Python ecosystem. To make sure a low-"
"level dependency (e.g. ``libfoo``) is available during installation"
msgstr ""
"在某些情况下，例如 Python 二进制扩展，你的软件包可能依赖于在 Python 生态系统之外编译的代码。"
"要确保在安装过程中，低级别的依赖关系（例如 ``libfoo``）是可用的"

#: ../../tutorial.rst:153
msgid "Running commands"
msgstr "运行命令"

#: ../../tutorial.rst:155
msgid ""
"The ``session.run`` function lets you run commands within the context of "
"your session's virtual environment. Here's a few examples:"
msgstr ""
"``session.run`` 函数让你在会话的虚拟环境中运行命令。这里有几个例子："

#: ../../tutorial.rst:158
msgid "You can install and run Python tools:"
msgstr "你可以安装和运行 Python 工具："

#: ../../tutorial.rst:168
msgid ""
"If you want to pass more arguments to a program just add more arguments "
"to ``run``:"
msgstr ""
"如果你想给程序传递更多的参数，只需在 ``run`` 中添加更多的参数："

#: ../../tutorial.rst:178
msgid "You can also pass environment variables:"
msgstr "你也可以传递环境变量："

#: ../../tutorial.rst:192
msgid ""
"See :func:`nox.sessions.Session.run` for more options and examples for "
"running programs."
msgstr ""
"参见 :func:`nox.session.Session.run`，了解更多运行程序的选项和例子。"

#: ../../tutorial.rst:196
msgid "Selecting which sessions to run"
msgstr "选择要运行的会话"

#: ../../tutorial.rst:198
msgid ""
"Once you have multiple sessions in your Noxfile you'll notice that Nox "
"will run them all by default. While this is useful, it often useful to "
"just run one or two at a time. You can use the ``--sessions`` argument "
"(or ``-s``) to select which sessions to run. You can use the ``--list`` "
"argument to show which sessions are available and which will be run. "
"Here's some examples:"
msgstr ""
"一旦你的 Nox 文件中有多个会话，你会发现 Nox 会默认运行它们。"
"虽然这很有用，但通常一次只运行一个或两个是有用的。"
"你可以使用 ``--sessions`` 参数（或 ``-s``）来选择运行哪些会话。"
"你可以使用 ``--list`` 参数来显示哪些会话是可用的，哪些将被运行。"
"这里有一些例子："

#: ../../tutorial.rst:204
msgid "Here's a Noxfile with three sessions:"
msgstr "这里有一个有三个会话的 Noxfile："

#: ../../tutorial.rst:223
msgid "If you just run ``nox --list`` you'll see that all sessions are selected:"
msgstr "如果你只是运行 ``nox --list`` ，你会看到所有会话都被选中："

#: ../../tutorial.rst:237
msgid ""
"If you run ``nox --list --sessions lint`` you'll see that only the lint "
"session is selected:"
msgstr ""
"如果你运行 ``nox --list --sessions lint``，你会看到只有 lint 会话被选中："

#: ../../tutorial.rst:252
msgid "And if you run ``nox --sessions lint`` Nox will just run the lint session:"
msgstr "而如果你运行 ``nox --sessions lint``，Nox 将只运行 lint 会话："

#: ../../tutorial.rst:262
msgid ""
"In the noxfile, you can specify a default set of sessions to run. If so, "
"a plain ``nox`` call will only trigger certain sessions:"
msgstr ""
"在 noxfile 中，你可以指定一组默认的会话来运行。如果是这样，普通的 ``nox`` 调用将只触发某些会话："

#: ../../tutorial.rst:271
msgid ""
"If you set this to an empty list, Nox will not run any sessions by "
"default, and will print a helpful message with the ``--list`` output when"
" a user does not specify a session to run."
msgstr ""
"如果你将此设置为空列表，Nox 默认不会运行任何会话，"
"当用户没有指定要运行的会话时，会用 ``--list`` 输出打印一条有用的信息。"

#: ../../tutorial.rst:275
msgid ""
"There are many more ways to select and run sessions! You can read more "
"about invoking Nox in :doc:`usage`."
msgstr ""
"选择和运行会话的方法还有很多! 你可以在 :doc:`usage` 中阅读更多关于调用 Nox 的信息。"

#: ../../tutorial.rst:279
msgid "Queuing sessions"
msgstr "会话队列"

#: ../../tutorial.rst:281
msgid ""
"If you want to queue up (or \"notify\") another session from the current "
"one, you can use the ``session.notify`` function:"
msgstr ""
"如果你想从当前会话中排队（或 \"notify\"）另一个会话，你可以使用 ``session.notify`` 函数："

#: ../../tutorial.rst:297
msgid ""
"You can queue up any session you want, not just test and coverage "
"sessions, but this is a very commonly used pattern."
msgstr ""
"你可以排队任何你想要的会话，不仅仅是测试和覆盖会话，但这是一个非常常用的模式。"

#: ../../tutorial.rst:300
msgid ""
"Now running ``nox --session tests`` will run the tests session and then "
"the coverage session."
msgstr ""
"现在运行 ``nox --session tests`` 将运行测试会话，然后是覆盖会话。"

#: ../../tutorial.rst:302
msgid "You can also pass the notified session positional arguments:"
msgstr "你也可以传递被通知的会话位置参数："

#: ../../tutorial.rst:318
msgid ""
"Note that this will only have the desired effect if selecting sessions to"
" run via the ``--session/-s`` flag. If you simply run ``nox``, all "
"selected sessions will be run."
msgstr ""
"注意，这只有在通过 ``--session/-s`` 标志选择要运行的会话时才会产生预期效果。"
"如果你简单地运行 ``nox``，所有选择的会话都会被运行。"

#: ../../tutorial.rst:321
msgid "Testing against different and multiple Pythons"
msgstr "对不同的和多个 Python 进行测试"

#: ../../tutorial.rst:323
msgid ""
"Many projects need to support either a specific version of Python or "
"multiple Python versions. You can have Nox run your session against "
"multiple interpreters by specifying ``python`` to ``@nox.session``. "
"Here's some examples:"
msgstr ""
"许多项目需要支持特定版本的 Python 或多个 Python 版本。"
"你可以通过指定 ``python`` 到 ``@nox.session``，让 Nox 针对多个解释器运行你的会话。"
"这里有一些例子："

#: ../../tutorial.rst:327
msgid ""
"If you want your session to specifically run against a single version of "
"Python only:"
msgstr ""
"如果你希望你的会话只针对单一版本的 Python 运行："

#: ../../tutorial.rst:335
msgid "If you want your session to run against multiple versions of Python:"
msgstr "如果你想让你的会话针对多个版本的 Python 运行："

#: ../../tutorial.rst:343
msgid ""
"You'll notice that running ``nox --list`` will show that this one session"
" has been expanded into three distinct sessions:"
msgstr ""
"你会注意到，运行 ``nox --list`` 将显示这一个会话已经扩展为三个不同的会话："

#: ../../tutorial.rst:354
msgid ""
"You can run all of the ``test`` sessions using ``nox --sessions test`` or"
" run an individual one using the full name as displayed in the list, for "
"example, ``nox --sessions test-3.5``. More details on selecting sessions "
"can be found over in the :doc:`usage` documentation."
msgstr ""
"你可以使用 ``nox --sessions test`` 来运行所有的 ``test`` 会话，"
"或者使用列表中显示的全名来运行单个会话，例如，``nox --sessions test-3.5``。"
"关于选择会话的更多细节可以在 :doc:`usage` 文档中找到。"

#: ../../tutorial.rst:359
msgid ""
"You can read more about configuring the virtual environment used by your "
"sessions over at :ref:`virtualenv config`."
msgstr ""
"你可以在 :ref:`virtualenv config` 上阅读更多关于配置你的会话所使用的虚拟环境的信息。"

#: ../../tutorial.rst:364
msgid "Testing with conda"
msgstr "用 conda 测试"

#: ../../tutorial.rst:366
msgid ""
"Some projects, especially in the data science community, need to test "
"that they work in a conda environment. If you want your session to run in"
" a conda environment:"
msgstr ""
"有些项目，尤其是数据科学界的项目，需要测试它们在 conda 环境下的工作。"
"如果你想让你的会话在 conda 环境下运行："

#: ../../tutorial.rst:376
msgid "Install packages with conda:"
msgstr "用 conda 安装软件包："

#: ../../tutorial.rst:382
msgid ""
"It is possible to install packages with pip into the conda environment, "
"but it's a best practice only install pip packages with the ``--no-deps``"
" option. This prevents pip from breaking the conda environment by "
"installing incompatible versions of packages already installed with "
"conda."
msgstr ""
"用 pip 安装软件包到 conda 环境是可能的，但最好的做法是只用 ``--no-deps`` 选项来安装 pip 软件包。"
"这样可以防止 pip 通过安装与 conda 已经安装的软件包不兼容的版本来破坏 conda 环境。"

#: ../../tutorial.rst:392
msgid ""
"``\"mamba\"`` is also allowed as a choice for ``venv_backend``, which "
"will use/require `mamba <https://github.com/mamba-org/mamba>`_ instead of"
" conda."
msgstr ""
"``\"mamba\"`` 也允许作为 ``venv_backend`` 的选择，它将使用/要求 `mamba <https://github.com/mamba-org/mamba>`_ 而不是 conda。"

#: ../../tutorial.rst:397
msgid "Parametrization"
msgstr "参数化"

#: ../../tutorial.rst:399
msgid ""
"Just like Nox can handle running against multiple interpreters, Nox can "
"also handle running your sessions with a list of different arguments "
"using the :func:`nox.parametrize` decorator."
msgstr ""
"就像 Nox 可以处理针对多个解释器的运行，Nox 也可以处理用不同的参数列表来运行你的会话，并使用 :func:`nox.parametrize` 装饰器。"

#: ../../tutorial.rst:403
msgid ""
"Here's a short example of using parametrization to test against two "
"different versions of Django:"
msgstr ""
"这里有一个使用参数化来测试两个不同版本的 Django 的简短例子："

#: ../../tutorial.rst:415
msgid ""
"If you run ``nox --list`` you'll see that Nox expands your one session "
"into multiple sessions. One for each argument value that you want to be "
"passed to your session:"
msgstr ""
"如果你运行 ``nox --list``，你会看到 Nox 将你的一个会话扩展为多个会话。"
"每个参数值都有一个，你想把它传给你的会话："

#: ../../tutorial.rst:427
msgid ""
":func:`nox.parametrize` has an interface and usage intentionally similar "
"to `pytest's parametrize`_. It's an extremely powerful feature of Nox. "
"You can read more about parametrization and see more examples over at "
":ref:`parametrized`."
msgstr ""
":func:`nox.parametrize` 的接口和用法有意类似于 `pytest 的 parametrize`_。它是 Nox 的一个非常强大的功能。"
"你可以在 :ref:`parametrized` 上阅读更多关于参数化的信息并看到更多的例子。"

#: ../../tutorial.rst:436
msgid "Next steps"
msgstr "下一步"

#: ../../tutorial.rst:438
msgid "Look at you! You're now basically an expert at Nox! ✨"
msgstr "看看你! 你现在基本上已经是 Nox 的专家了! ✨"

#: ../../tutorial.rst:440
msgid "For this point you can:"
msgstr "对于这一点，你可以："

#: ../../tutorial.rst:442
msgid "Read more docs, such as :doc:`usage` and :doc:`config`."
msgstr "阅读更多的文档，如 :doc:`usage` 和 :doc:`config`。"

#: ../../tutorial.rst:443
msgid "Give us feedback or contribute, see :doc:`CONTRIBUTING`."
msgstr "给我们反馈或贡献，见 :doc:`CONTRIBUTING`。"

#: ../../tutorial.rst:445
msgid "Have fun! 💜"
msgstr "玩得开心! 💜"

